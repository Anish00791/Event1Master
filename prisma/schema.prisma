generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model events {
  id               Int             @id @default(autoincrement())
  title            String          @db.VarChar(255)
  description      String?         @db.Text
  start_date       DateTime        @db.DateTime(0)
  end_date         DateTime        @db.DateTime(0)
  location         String?         @db.VarChar(255)
  max_participants Int?
  creator_id       Int
  created_at       DateTime        @default(now()) @db.DateTime(0)
  updated_at       DateTime        @default(now()) @db.DateTime(0)
  users            users           @relation(fields: [creator_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "events_ibfk_1")
  registrations    registrations[]
  teams            teams[]

  @@index([creator_id], map: "creator_id")
}

model registrations {
  id       Int    @id @default(autoincrement())
  event_id Int
  user_id  Int
  team_id  Int?
  status   String @db.VarChar(50)
  events   events @relation(fields: [event_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "registrations_ibfk_1")
  users    users  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "registrations_ibfk_2")
  teams    teams? @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "registrations_ibfk_3")

  @@index([event_id], map: "event_id")
  @@index([team_id], map: "team_id")
  @@index([user_id], map: "user_id")
}

model team_members {
  id        Int      @id @default(autoincrement())
  team_id   Int
  user_id   Int
  role      String   @default("member") @db.VarChar(50)
  joined_at DateTime @default(now()) @db.DateTime(0)
  teams     teams    @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "team_members_ibfk_1")
  users     users    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "team_members_ibfk_2")

  @@index([team_id], map: "team_id")
  @@index([user_id], map: "user_id")
}

model teams {
  id            Int             @id @default(autoincrement())
  name          String          @db.VarChar(255)
  event_id      Int
  leader_id     Int
  created_at    DateTime        @default(now()) @db.DateTime(0)
  updated_at    DateTime        @default(now()) @db.DateTime(0)
  registrations registrations[]
  team_members  team_members[]
  events        events          @relation(fields: [event_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "teams_ibfk_1")
  users         users           @relation(fields: [leader_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "teams_ibfk_2")

  @@index([event_id], map: "event_id")
  @@index([leader_id], map: "leader_id")
}

model users {
  id            Int             @id @default(autoincrement())
  username      String          @unique(map: "username") @db.VarChar(255)
  email         String          @unique(map: "email") @db.VarChar(255)
  password      String          @db.VarChar(255)
  role          String          @default("user") @db.VarChar(50)
  created_at    DateTime        @default(now()) @db.DateTime(0)
  updated_at    DateTime        @default(now()) @db.DateTime(0)
  events        events[]
  registrations registrations[]
  team_members  team_members[]
  teams         teams[]
}
